#    RISC-V rv32 tutorial examples
#
#    Copyright (C) 2021 John Winans
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#


2021-05-05 jrw

A super simple freestanding RV32I app that can run on QEMU.



## Run with one hart like this:

qemu-system-riscv32 -machine virt -m 128M -bios none -device loader,file=./prog -nographic -gdb tcp::1234


## Note that qemu will set the PC register to the load address of 'prog'.
## To stop qemu: ^A x


# run gdb with -S to make it waiut for gdb to attach before it starts running
riscv64-unknown-elf-gdb prog

target remote :1234



## To run with multiple UARTs (qemu will wait for all the sockets to be connected before running):

qemu-system-riscv32 -machine virt -m 128M -bios none -device loader,file=./prog -nographic -s -serial tcp::4000,server -serial tcp::4001,server -serial tcp::4002,server -serial tcp::4003,server
